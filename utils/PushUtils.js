import React from 'react';
import PushNotification from 'react-native-push-notification';
import xmpp from './XmppStore';
import { Actions } from 'react-native-mobx';

export const sendPush = (type, from, message, from_full) => {
  PushNotification.configure({

    // (optional) Called when Token is generated (iOS and Android)
    // onRegister: function(token) {
    //  console.log( 'TOKEN:', token );
    // },

    // (required) Called when a remote or local notification is opened or received
    onNotification: function(notification) {
      console.log( 'NOTIFICATION:');
      console.log(notification);

      switch(notification.tag){
        case 'Chat': xmpp.setRemote(from_full, false); Actions.conversation(); break;
        case 'Conference - invite': xmpp.setRemote(from, true, from_full ); Actions.conversation(); break;
        case 'Conference': xmpp.setRemote(from_full.split("@")[0], true, from_full ); Actions.conversation(); break;
      }
    },

    // ANDROID ONLY: GCM Sender ID (optional - not required for local notifications, but is need to receive remote push notifications)
    //senderID: "YOUR GCM SENDER ID",

    // Should the initial notification be popped automatically
    // default: true
    popInitialNotification: true,

  });

  console.log(type);
  console.log(from);
  console.log(message)
  console.log(from_full)
   PushNotification.localNotification({
    /* Android Only Properties */
    id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
    autoCancel: false, // (optional) default: true
    largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
    smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
    bigText: message, // (optional) default: "message" prop //Dette skal være hvem fra meldingen kom
    subText: type, // (optional) default: none //Dette skal være muc/chat/interpretation
    color: "#276696", // (optional) default: system default
    vibrate: true, // (optional) default: true
    vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
    tag: type, // (optional) add tag to message //kanskje tag på hva som kom (chat,muc/interpret
    ongoing: false, // (optional) set whether this is an "ongoing" notification

    title: type === 'Conference' ? from_full.split("@")[0] : from, // (optional, for iOS this is only used in apple watch, the title will be the app name on other iOS devices)
    message: type === 'Conference' ? from + ': ' + message: message, // (required)
    playSound: true, // (optional) default: true
    soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
  });

  PushNotification.setApplicationIconBadgeNumber(1)
};


